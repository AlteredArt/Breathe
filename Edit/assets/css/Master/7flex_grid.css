 /*--------------------------------------------------------------
>>> FLEX & GRID
--------------------------------------------------------------*/

 /* Order */
 .or--1 {order: -1 !important;}
 .or-0 {order: 0 !important;}
 .or-1 {order: 1 !important;}
 .or-2 {order: 2 !important;}

 /* VERTICAL-ALIGN (Maybe not needed)*/
 .al-baseline {vertical-align: baseline !important;}
 .al-top {vertical-align: top !important;}
 .al-middle {vertical-align: middle !important;}
 .al-bottom {vertical-align: bottom !important;}
 .al-text-bottom {vertical-align: text-bottom !important;}
 .al-text-top {vertical-align: text-top !important;}

 /* JUSTIFY-CONTENT */
 /* On flex direction row Justify is horizontal state. */
 .jc-start {justify-content: flex-start !important;}
 .jc-end {justify-content: flex-end !important;}
 .jc-center {justify-content: center !important;}
 .jc-between {justify-content: space-between !important;}
 .jc-around {justify-content: space-around !important;}
 .jc-evenly {justify-content: space-evenly !important;}

 /* ALIGN-CONTENT   */
 /* Note: There must be multiple lines of items for this property to have any effect! */
 /* Only matters if you have more than one row */
 /* Tip: Use the justify-content property to align the items on the main-axis (horizontally). */
 .ac-start {align-content: flex-start !important;}
 .ac-end {align-content: flex-end !important;}
 .ac-center {align-content: center !important;}
 .ac-between {align-content: space-between !important;}
 .ac-around {align-content: space-around !important;}
 .ac-evenly {align-content: space-evenly !important;}
 .ac-stretch {align-content: stretch !important;}

 /* JUSTIFY-ITEMS */
 .ji-start {justify-items: start !important;}
 .ji-end {justify-items: end !important;}
 .ji-center {justify-items: center !important;}
 .ji-stretch {justify-items: stretch !important;}

 /* ALIGN-ITEMS */
 /* Note: The align-items is the vertical alignment */
 /* Default value is stretch */
 /* Tip: Use the align-self property of each item to override the align-items property. */
 /* If flex-direction is set to reverse swap flex-start & flex-end */
 .ai-start {align-items: flex-start !important;}  
 .ai-end {align-items: flex-end !important;}
 .ai-center {align-items: center !important;}
 .ai-baseline {align-items: baseline !important;}
 .ai-stretch {align-items: stretch !important;}

 /* JUSTIFY-SELF (MUST BE ON A SINGLE ITEM)*/
 .js-auto {justify-self: auto !important;}
 .js-start {justify-self: flex-start !important;}
 .js-end {justify-self: flex-end !important;}
 .js-center {justify-self: center !important;}
 .js-baseline {justify-self: baseline !important;}
 .js-stretch {justify-self: stretch !important;}

 /* ALIGN-SELF (NEED TO BE ON A SINGLE OBJECT)*/
 /* In Flexbox, it aligns the item on the cross axis, USE for stubborn children (NO ALIGN-CONTENT). */
 /* Tip: The align-self property specifies the alignment for the selected item inside the flexible container. */
 /* Note: The align-self property overrides the flexible container's align-items property. */
 .as-auto {align-self: auto !important;}
 .as-start {align-self: flex-start !important;}
 .as-end {align-self: flex-end !important;}
 .as-center {align-self: center !important;}
 .as-baseline {align-self: baseline !important;}
 .as-stretch {align-self: stretch !important;}
